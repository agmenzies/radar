name,ring,quadrant,isNew,description
Typescript,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.typescriptlang.org/"">TypeScript</a></strong> is a superset of JavaScript that compiles to plain JavaScript. It is a statically typed language that is designed for the development of large applications and transcompiles to JavaScript. TypeScript is developed and maintained by Microsoft. It is a language for application-scale JavaScript development that supports classes, interfaces, and modules. It provides improved tooling and better structuring of large codebases. TypeScript is particularly well-suited to developing large applications and transcompiles to JavaScript. It may be used to develop JavaScript applications for both client-side and server-side execution.</p>"
C#,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://docs.microsoft.com/en-us/dotnet/csharp/"">C#</a></strong> is a general-purpose, multi-paradigm programming language developed by Microsoft. C# is widely used for building mobile applications, games, and enterprise software. It is a statically typed language that is designed for the Common Language Infrastructure (CLI). C# is a simple, modern, object-oriented, and type-safe programming language. It is a language that is suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.</p>"
NUnit,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://nunit.org/"">NUnit</a></strong> is a unit-testing framework for all .Net languages. Initially ported from JUnit, the current production release, version 3, has been completely rewritten with many new features and support for a wide range of .NET platforms. NUnit brings xUnit-style unit-testing to all .NET languages. Although we have been using NUnit for many years, it is still actively maintained and has a large community of users.</p>"
CMake,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://cmake.org/"">CMake</a></strong> is an open-source, cross-platform family of tools designed to build, test and package software. CMake is used to control the software compilation process using simple platform and compiler-independent configuration files, and generate native makefiles and workspaces that can be used in the compiler environment of your choice. CMake is quite sophisticated: it is possible to support complex environments requiring system configuration, pre-processor generation, code generation, and template instantiation.</p>"
NetCDF,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.unidata.ucar.edu/software/netcdf/"">NetCDF</a></strong> (Network Common Data Form) is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data. NetCDF is widely used in the Earth sciences and other fields. The project homepage is hosted by the Unidata program at the University Corporation for Atmospheric Research (UCAR).</p>"
NSubstitue,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://nsubstitute.github.io/"">NSubstitute</a></strong> is a friendly substitute for .NET mocking libraries. It has a simple, succinct syntax to help developers write clearer tests. NSubstitute is designed for Arrange-Act-Assert (AAA) testing and is tailored to C# 3.0 and later, Silverlight 5, Windows Store apps, and Windows Phone 8.</p>"
Pydantic,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://pydantic-docs.helpmanual.io/"">Pydantic</a></strong> is a data validation and settings management library for Python. It uses Python type annotations to validate data and to define the shape of data. Pydantic enforces type hints at runtime, and provides user-friendly errors when data is invalid. Pydantic is particularly useful for data validation, settings management, and data parsing. It is designed to be simple to use and to provide helpful error messages.</p>"
Python,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.python.org/"">Python</a></strong> is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects. Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming. Python is often described as a ""batteries included"" language due to its comprehensive standard library.</p><p>Deltares uses this programming language because of easy cooperation between software developers and hydro engineers.</p>"
Vue 3,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://v3.vuejs.org/"">Vue 3</a></strong> is a progressive JavaScript framework for building user interfaces. Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated single-page applications when used in combination with modern tooling and supporting libraries.</p>"
C++,Trial,language-and-frameworks,FALSE,"<p><strong><a href=""https://isocpp.org/"">C++</a></strong> is a general-purpose programming language created by Bjarne Stroustrup as an extension of the C programming language, or ""C with Classes"". The language has expanded significantly over time, and modern C++ has object-oriented, generic, and functional features in addition to facilities for low-level memory manipulation. It is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, Microsoft, Intel, and IBM.</p>"
SpecFlow,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://specflow.org/"">SpecFlow</a></strong> is a tool for creating executable specifications for .NET applications. It provides integration with Visual Studio, allowing developers and testers to define, manage, and automatically execute human-readable acceptance tests in .NET projects. SpecFlow uses the official Gherkin parser and supports the .NET framework, Xamarin, and .NET Core. It is a tool that can be used to define, manage, and automatically execute human-readable acceptance tests in .NET projects.</p>"
XArray,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""http://xarray.pydata.org/en/stable/"">XArray</a></strong> is an open-source project and Python package that aims to bring the labeled data power of pandas to the physical sciences by providing N-dimensional variants of the core pandas data structures. XArray is built on top of the Dask library and is particularly useful for working with multi-dimensional arrays.</p>"
Quarto,Trial,languages-and-frameworks,TRUE,"<p><strong><a href=""https://quarto.org/"">Quarto</a></strong> is a new tool for reproducible computational documents. It is designed to make it easy to create, manage, and publish reproducible computational documents using a combination of markdown, code, and output. Quarto is built on top of the R Markdown ecosystem.</p>"
Vuetify,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://vuetifyjs.com/en/"">Vuetify</a></strong> is a Material Design component framework for Vue. It aims to provide clean, semantic, and reusable components that make building your application a breeze.</p>"
MPI,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.mpi-forum.org/"">MPI</a></strong> (Message Passing Interface) is a standardized and portable message-passing system designed by a group of researchers from academia and industry to function on a wide variety of parallel computers. The standard defines the syntax and semantics of library routines that can be called from C, C++, and Fortran to perform basic point-to-point communication between processes in a parallel application.</p>"
Plotly Dash,Trial,languages-and-frameworks,TRUE,"<p><strong><a href=""https://plotly.com/dash/"">Plotly Dash</a></strong> is a low-code Python framework for building web applications. No JavaScript required. Built on top of Plotly.js, React, and Flask, Dash ties modern UI elements like dropdowns, sliders, and graphs directly to your analytical Python code. Dash apps are rendered in the web browser, so you can deploy your apps on servers or share them as standalone documents. With Dash, you can create interactive web-based visualizations and dashboards using only Python code.</p><p>Motivation: Several trials have been performed in projects, but Plotly Dash is not yet part of any PMT. There are alternatives to consider, like Streamlit.</p>"
Julia,Trial,languages-and-frameworks,TRUE,"<p><strong><a href=""https://julialang.org/"">Julia</a></strong> is a high-level, high-performance, dynamic programming language. While it is a general-purpose language and can be used to write any application, many of its features are well-suited for high-performance numerical analysis and computational science. Julia is a language that is designed to be fast, easy to use, and easy to learn.</p><p>Motivation: Julia seems to be a language with high potential, but there are some missing components involving ease of use for developers, and security scanning.</p>"
Rust,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.rust-lang.org/"">Rust</a></strong> is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety. Rust is a multi-paradigm language that is designed for performance and safety. It is particularly well-suited to writing low-level code, such as operating systems, device drivers, and embedded systems. Rust is a language that is designed to be memory-safe and thread-safe, and to prevent null pointer dereferences, buffer overflows, and other common programming errors.</p><p>Motivation: Deltares would like to try out projects with this language.</p>"
BMI,Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://bmi.readthedocs.io/en/latest/"">BMI</a></strong> (Basic Model Interface) is a standardized interface for coupling models and software components.</p><p>Motivation: Deltares is using this interface for integrated modelling. The architecture guild is wondering if there are alternatives.</p>"
Apache Airflow,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://airflow.apache.org/"">Apache Airflow</a></strong> is a platform to programmatically author, schedule, and monitor workflows. Use airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed. When workflows are defined as code, they become more maintainable, versionable, testable, and collaborative.</p><p>Motivation: Deltares is not using this at the moment, but can be compared as an alternative to Argo.</p>"
Dagster,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://dagster.io/"">Dagster</a></strong> is a data orchestrator for machine learning, analytics, and ETL. Dagster lets you define pipelines in terms of the data flow between reusable, logical components, then test locally and run anywhere. With a unified view of pipelines and the assets they produce.</p><p>Motivation: Deltares is not using this at the moment, but can be compared as an alternative to Argo.</p>"
Dask,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://dask.org/"">Dask</a></strong> is a flexible parallel computing library. Dask is designed to scale from single machines to clusters of machines.</p><p>Motivation: This package is nice for parallel computing in Python, but we should still contemplate if we want to write high-performance code in Python. We have better alternatives we have experience in, like C++.</p>"
Streamlit,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://streamlit.io/"">Streamlit</a></strong> is a low-code open-source app framework for Data Science teams.</p><p>Motivation: This is one of the alternatives for Plotly Dash to consider.</p>"
Bokeh,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://bokeh.org/"">Bokeh</a></strong> is an interactive visualization library that targets modern web browsers for presentation. </p><p>Motivation: This is one of the alternatives for Plotly Dash to consider.</p>"
Streamflow,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://streamflow.di.unito.it/"">Streamflow</a></strong> is a data orchestration platform that enables data engineers to build, test, and deploy data pipelines. Streamflow supports Common Workflow Language.</p><p>Motivation: Streamflow seems to be accepted by the scientific community, but does not have many contributors. There are better and bigger alternatives for this tooling, like Argo, Airflow, and Dagster. Currently used in the InterTwin project.</p>"
Common Workflow Language,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.commonwl.org/"">Common Workflow Language</a></strong> (CWL) is a specification for describing analysis workflows and tools in a way that makes them portable and scalable across a variety of software and hardware environments, from workstations to cluster, cloud, and high-performance computing (HPC) environments.</p><p>Motivation: Although CWL seems like a nice concept, as it is a description that could potentially be used by different platforms, it is not widely adopted yet. Currently used in the InterTwin project.</p>"
Fortran,Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://fortran-lang.org/"">Fortran</a></strong> is a general-purpose, compiled imperative programming language that is especially suited to numeric computation and scientific computing.</p><p>Motivation: The architecture board is doubting on the future of Fortran and it is likely that we will not start any new projects in Fortran. Alternatives could be C++, (maybe Julia or Rust).</p>"
Meson,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://mesonbuild.com/"">Meson</a></strong> is an open-source build system meant to be both extremely fast and, even more importantly, as user-friendly as possible. The main design point of Meson is that every moment a developer spends writing or debugging build definitions is a second wasted. So is every second spent waiting for the build system to actually start compiling code. All these moments are non-productive, so the developer is encouraged to spend as little time as possible writing and maintaining build definitions. This tool could be an alternative to CMake.</p><p>Motivation: It is interesting to take a look at this system as it seems to be easier in its description. We want to know how package management is integrated in this tool. MODFLOW 6 uses Meson as build tool.</p>"
Flutter,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://flutter.dev/"">Flutter</a></strong> is Google's UI toolkit for building natively compiled applications for mobile, web, and desktop from a single codebase. Flutter is particularly useful for working with user interfaces that need to be created quickly and easily.</p><p>Motivation: Deltares doesn't use this framework yet, but it would be an interesting alternative to Vuetify and PyQt.</p>"
Snakemake,Hold,languages-and-frameworks,FALSE,"<p><strong><a href=""https://snakemake.readthedocs.io/en/stable/"">Snakemake</a></strong> is a workflow management system that aims to reduce the complexity of creating workflows by providing a fast and comfortable execution environment, together with a clean and modern specification language in Python style. Snakemake workflows are essentially Python scripts extended by declarative code to define rules. Rules describe how to create output files from input files.</p><p>Motivation: Although widely used in the PMT Hydrology, Snakemake is not made for large-scale workflows and misses distributed functionalities. Alternatives are Dagster, Apache Airflow, and Argo.</p>"
Java,Hold,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.java.com/"">Java</a></strong> is a general-purpose programming language that is class-based, object-oriented, and designed to have as few implementation dependencies as possible. Java is a language that is designed to be simple, object-oriented, and familiar. It is a language that is suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.</p><p>Motivation: The architecture guild is contemplating on the future of Java. New projects should be started in Java. Alternatives: C#, C++, python, Rust or anything in the Adopt circle. Cross-platform user interfaces can be developed via web development, Qt C++, Flutter, C# MAUI, Avalonia UI.</p>"
RestructuredText,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://docutils.sourceforge.io/rst.html"">RestructuredText</a></strong> is an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser system. It is useful for in-line program documentation (such as Python docstrings), for quickly creating simple web pages, and for standalone documents. </p><p>Motivation: Deltares is using this language for documentation. The architecture guild is wondering if there are better alternatives like Quarto and Markdown.</p>"
Sphinx,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.sphinx-doc.org/en/master/"">Sphinx</a></strong> is a tool that makes it easy to create intelligent and beautiful documentation for Python projects (or other documents consisting of multiple reStructuredText sources). It was originally created for the Python documentation, and it has excellent facilities for the documentation of Python projects, but C/C++ is supported as well. Sphinx uses reStructuredText as its markup language, and many of its strengths come from the power and straightforwardness of reStructuredText and its ability to be translated and to produce output in multiple formats.</p><p>Motivation: Deltares is using this tool for documentation. The architecture guild is wondering if there are better alternatives like Quarto.</p>"
PyQt,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.riverbankcomputing.com/software/pyqt/intro"">PyQt</a></strong> is a set of Python v2 and v3 bindings for The Qt Company's Qt application framework and runs on all platforms supported by Qt, including Windows, OS X, Linux, iOS, and Android. PyQt5 supports Qt v5. PyQt4 supports Qt v4 and will build against Qt v5. The bindings are implemented as a set of Python modules and contain over 1,000 classes. PyQt brings together the Qt C++ cross-platform application framework and the cross-platform interpreted language Python. PyQt is particularly useful for working with the Qt application framework in Python applications.</p><p>Motivation: Deltares is using this tool for creating user interfaces. The architecture guild is wondering if there are better alternatives like Vuetify, Avalonia, and Flutter.</p>"
Guitares,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://github.com/Deltares-research/Guitares"">Guitares</a></strong> is a Python library for creating user interfaces with the Qt application framework. </p><p>Motivation: Deltares is using this tool for creating user interfaces. The architecture guild is wondering if there are better alternatives like Vuetify and Flutter.</p>"
Jira,Adopt,platforms,FALSE,"<p><strong><a href=""https://www.atlassian.com/software/jira"">Jira</a></strong> is a proprietary issue tracking product developed by Atlassian that allows bug tracking and agile project management.</p>"
Sigrid-CI,Adopt,platforms,FALSE,"<p><strong><a href=""https://docs.sigrid-says.com/"">Sigrid-CI</a></strong> helps you to improve your software by measuring your system’s code quality, and then compares the results against a benchmark of 10,000 industry systems to give you concrete advice on areas where you can improve.</p>"
HPC singularity,Adopt,platforms,TRUE,"<p><strong><a href=""https://sylabs.io/singularity/"">HPC singularity</a></strong> is a container solution for high-performance computing (HPC) environments. It allows you to package an entire environment, including the operating system, libraries, and application code, into a single file. This file can be moved between systems and executed without the need for a virtual machine or any additional software.</p>"
Docker,Adopt,platforms,FALSE,"<p><strong><a href=""https://www.docker.com/"">Docker</a></strong> is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their software, libraries, and configuration files; they can communicate with each other through well-defined channels. All containers are run by a single operating system kernel and are thus more lightweight than virtual machines. Containers are created from images that specify their precise contents. Images are often created by combining and modifying standard images downloaded from public repositories.</p>"
Github,Adopt,platforms,FALSE,"<p><strong><a href=""https://www.github.com/"">Github</a></strong> is a web-based platform for version control using Git. It offers all of the distributed version control and source code management (SCM) functionality of Git as well as adding its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.</p>"
AlmaLinux OS,Adopt,platforms,FALSE,"<p><strong><a href=""https://almalinux.org/"">AlmaLinux OS</a></strong> is a free and open-source Linux distribution based on Red Hat Enterprise Linux (RHEL). It is designed to be a drop-in replacement for RHEL and is built by the creators of the CentOS project.</p>"
Windows 11,Adopt,platforms,TRUE,"<p><strong><a href=""https://www.microsoft.com/en-us/windows/windows-11"">Windows 11</a></strong> is the latest version of the Windows operating system.</p><p>Motivation: Deltares is still waiting for an upgrade to Windows 11.</p>"
Teamcity,Adopt,platforms,FALSE,"<p><strong><a href=""https://www.jetbrains.com/teamcity/"">Teamcity</a></strong> is a continuous integration and continuous delivery server developed by JetBrains.</p>"
Gitlab on premise,Adopt,platforms,FALSE,"<p><strong><a href=""https://about.gitlab.com/"">Gitlab</a></strong> is a web-based DevOps lifecycle tool that provides a Git repository manager providing wiki, issue-tracking, and CI/CD pipeline features, using an open-source license, developed by GitLab Inc.</p><p>Motivation: Deltares uses this platform only for sensitive projects that do not want their data to be available in a cloud environment like Github.</p>"
Sonarcloud,Adopt,platforms,FALSE,"<p><strong><a href=""https://sonarcloud.io/"">Sonarcloud</a></strong> is a cloud-based code quality and security service that helps developers detect code quality issues and security vulnerabilities early in the development process.</p><p>Motivation: Sonarcloud does not yet support all languages that Deltares uses, although most languages like Python, C#, and C++ are available.</p>"
Confluence,Adopt,platforms,FALSE,"<p><strong><a href=""https://www.atlassian.com/software/confluence"">Confluence</a></strong> is a proprietary wiki software application developed by Atlassian used for collaboration and knowledge management.</p>"
Conda forge,Adopt,platforms,FALSE,"<p><strong><a href=""https://conda-forge.org/"">Conda forge</a></strong> is a community-driven collection of conda packages. Conda is an open-source package management system and environment management system that runs on Windows, macOS, and Linux. Conda quickly installs, runs, and updates packages and their dependencies. Conda is particularly useful for working with packages and environments that need to be tracked and managed.</p><p>Motivation: Notice that anaconda, the package manager, is considered slow and there are better alternatives like Mamba and Pixi.</p>"
Argo,Adopt,platforms,TRUE,"<p><strong><a href=""https://argoproj.github.io/"">Argo</a></strong> is an open-source container-native workflow engine for orchestrating parallel jobs on Kubernetes.</p><p>Motivation: Delft3D-GT uses Argo for running workflows on Kubernetes. It is a service that is kept running for a client."
Kubernetes,Adopt,platforms,TRUE,"<p><strong><a href=""https://kubernetes.io/"">Kubernetes</a></strong> is an open-source container-orchestration system for automating computer application deployment, scaling, and management.</p><p>Motivation: As we adopt Argo, we also adopt Kubernetes.</p>"
pypi,Adopt,platforms,FALSE,"<p><strong><a href=""https://pypi.org/"">pypi</a></strong> is the Python Package Index. It is a repository of software packages for the Python programming language.</p><p>Motivation: Deltares is using this repository for distributing and consuming Python packages. Some packages should be represented on both pip and conda, depending on their user group and contents.</p>"
Github projects,Trial,platforms,TRUE,"<p><strong><a href=""https://github.com/features/issues"">Github projects</a></strong> is a project management tool that allows you to organize and prioritize your work.</p><p>Motivation: Deltares uses Jira for project management, although some products are already using Github projects. The architecture guild will decide on a policy on when to use which tool.</p>"
Apptainer,Trial,platforms,TRUE,"<p><strong><a href=""https://apptainer.org/"">Apptainer</a></strong> is a platform for building, deploying, and managing containerized applications.</p>"
Github actions,Trial,platforms,TRUE,"<p><strong><a href=""https://github.com/features/actions"">Github actions</a></strong> is a platform for automating workflows.</p><p>Motivation: Deltares uses Teamcity for continuous integration and continuous delivery, although some products are already using Github actions. The architecture guild will decide on a policy on when to use which tool.</p>"
Dependabot,Trial,platforms,TRUE,"<p><strong><a href=""https://dependabot.com/"">Dependabot</a></strong> is a tool that automates dependency updates. It checks for updates to your dependencies every day and opens a pull request when it finds an update. You can configure Dependabot to open pull requests immediately or after a certain number of days. There are also vulnerability checks in place.</p><p>Motivation: Dependabot comes for free with our Github subscription. It is useful, but does not work for all ecosystems and only works for Github repositories. Still it is useful to enable it where possible.</p><p>Question: Can we use custom repositories for update checking?</p>"
MinIO,Trial,platform,FALSE,"<p><strong><a href=""https://min.io/"">MinIO</a></strong> is a high-performance, distributed object storage server, designed for large-scale private cloud infrastructure.</p>"
QGIS,Trial,platform,FALSE,"<p><strong><a href=""https://qgis.org/"">QGIS</a></strong> is a free and open-source cross-platform desktop geographic information system (GIS) application that supports viewing, editing, and analysis of geospatial data.</p><p>Motivation: The PMT Hydrology and Hydrodynamics is writing user interface plugins for QGIS and is wondering if these kind of user interfaces is the way to go in the future. If so, we should be able to co-create with QGIS and influence their technical roadmap.</p>"
Sonatype Nexus Repository,Assess,platforms,TRUE,"<p><strong><a href=""https://www.sonatype.com/nexus/repository-oss"">Nexus</a></strong> is a repository manager that allows you to proxy, collect, and manage your dependencies. It makes it easy to distribute your software. Internally, you configure your build to publish artifacts to Nexus and they then become available to other developers.</p><p>Motivation: ICT is working on a first implementation for testing purposes. Multiple PMTs are interested in distributing packages via a private conda, conan or NuGet repository.</p>"
Paraview,Assess,platforms,TRUE,"<p><strong><a href=""https://www.paraview.org/"">Paraview</a></strong> is an open-source, multi-platform data analysis and visualization application. Paraview is particularly useful for working with large datasets and for creating visualizations of scientific data.</p><p>Motivation: We need to gain experience on our own datasets and research if it's possible to visualize hydro data. It would be possible to write plugins or customization logic so that we can use this tool for visualization purposes, so that we don't need to write complete user interfaces ourselves.</p>"
CentOS 7,Hold,platforms,FALSE,"<p><strong><a href=""https://www.centos.org/"">CentOS 7</a></strong> is a free and open-source Linux distribution based on Red Hat Enterprise Linux (RHEL). It is designed to be a drop-in replacement for RHEL and is built by the creators of the CentOS project.</p><p>Motivation: Deltares is still using CentOS 7 on all servers and is awaiting an upgrade to AlmaLinux OS by ICT.</p>"
Sigrid FTP upload,Hold,platforms,FALSE,"<p><strong><a href=""https://docs.sigrid-says.com/"">Sigrid FTP upload</a></strong> helps you to improve your software by measuring your system’s code quality, and then compares the results against a benchmark of 10,000 industry systems to give you concrete advice on areas where you can improve.</p><p>Motivation: Uploading via FTP is the old way of doing things and is superceded by Sigrid-CI.</p>"
Windows 10,Hold,platforms,FALSE,"<p><strong><a href=""https://www.microsoft.com/en-us/windows/windows-10"">Windows 10</a></strong> is an older version of the Windows operating system.</p><p>Motivation: Deltares is still using Windows 10 on all developer computers and is awaiting an upgrade to Windows 11 by ICT.</p>"
ReSharper,Adopt,tools,FALSE,"<p><strong><a href=""https://www.jetbrains.com/resharper/"">ReSharper</a></strong> is a popular developer productivity extension for Microsoft Visual Studio. It automates most of what can be automated in your coding routines.</p>"
PyCharm,Adopt,tools,FALSE,"<p><strong><a href=""https://www.jetbrains.com/pycharm/"">PyCharm</a></strong> is an integrated development environment (IDE) used in computer programming, specifically for the Python language.</p>"
Ninja,Adopt,tools,FALSE,"<p><strong><a href=""https://ninja-build.org/"">Ninja</a></strong> is a small build system with a focus on speed. It differs from other build systems in two major respects: it is designed to have its input files generated by a higher-level build system, and it is designed to run builds as fast as possible.</p>"
Pixi,Adopt,tools,TRUE,"<p><strong><a href=""https://pixi.sh/"">Pixi</a></strong> is a fast, lightweight package manager for Python. It is designed to be faster than Conda and Pip and can integrate from both types of channels.</p>"
CLion,Adopt,tools,TRUE,"<p><strong><a href=""https://www.jetbrains.com/clion/"">CLion</a></strong> is an integrated development environment (IDE) used in computer programming, specifically for the C and C++ languages.</p>"
MSBuild,Adopt,tools,FALSE,"<p><strong><a href=""https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild"">MSBuild</a></strong> is the build platform for .NET and Visual Studio. MSBuild is a build tool that helps automate the process of creating a software product, including compiling the source code, packaging, testing, deployment, and creating documentation.</p>"
Visual Studio Code,Adopt,tools,FALSE,"<p><strong><a href=""https://code.visualstudio.com/"">Visual Studio Code</a></strong> is a source-code editor developed by Microsoft for Windows, Linux, and macOS. It includes support for debugging, embedded Git control, syntax highlighting, intelligent code completion, snippets, and code refactoring.</p>"
IntelliJ IDEA,Adopt,tools,FALSE,"<p><strong><a href=""https://www.jetbrains.com/idea/"">IntelliJ IDEA</a></strong> is an integrated development environment (IDE) written in Java for developing computer software.</p>"
Rider,Adopt,tools,FALSE,"<p><strong><a href=""https://www.jetbrains.com/rider/"">Rider</a></strong> is a cross-platform .NET IDE based on the IntelliJ platform and ReSharper.</p>"
Github Copilot,Trial,tools,TRUE,"<p><strong><a href=""https://copilot.github.com/"">Github Copilot</a></strong> is an AI pair programmer that helps you write code faster. It draws context from the code you’re working on and suggests whole lines or entire functions instantly.</p>"
CTest,Trial,tools,FALSE,"<p><strong><a href=""https://cmake.org/cmake/help/latest/manual/ctest.1.html"">CTest</a></strong> is a testing tool distributed as part of CMake. It can be used to automate testing of software packages and is used to drive the testing process, acting as a front-end to the testing scripts that are part of the software package being tested.</p>"
Ranorex,Trial,tools,FALSE,"<p><strong><a href=""https://www.ranorex.com/"">Ranorex</a></strong> is a software testing tool that provides test automation for multiple environments, devices, and software applications.</p>"
Clang-Tidy,Trial,tools,TRUE,"<p><strong><a href=""https://clang.llvm.org/extra/clang-tidy/"">Clang-Tidy</a></strong> is a clang-based C++ “linter” tool. Its purpose is to provide an extensible framework for diagnosing and fixing typical programming errors, like style violations, interface misuse, or bugs that can be deduced via static analysis.</p><p>Motivation: This tool is being used in the KRATOS project.</p>"
GNU Compiler,Trial,tools,FALSE,"<p><strong><a href=""https://gcc.gnu.org/"">GNU Compiler</a></strong> is a compiler system produced by the GNU Project supporting various programming languages.</p><p>Motivation: GNU compilers should be used to better support our open source community, as other developers can use that compiler.</p>"
Infer,Assess,tools,TRUE,"<p><strong><a href=""https://fbinfer.com/"">Infer</a></strong> is a static analysis tool for Java, C, and Objective-C.</p><p>Motivation: Interesting alternative for or addition to Clang-Tidy.</p>"
Snyk,Assess,tools,TRUE,"<p><strong><a href=""https://snyk.io/"">Snyk</a></strong> is a developer-first security solution that helps you use open source code and stay secure.</p><p>Motivation: Deltares is lacking some tools for SAST and SCA. Snyk is an interesting toolset for making more secure coding.</p>"
Appium,Assess,tools,TRUE,"<p><strong><a href=""http://appium.io/"">Appium</a></strong> is an open-source tool for test automation in native, mobile web, and hybrid applications on iOS mobile, Android mobile, and Windows desktop platforms.</p><p>Motivation: This tool could be a good alternative to Ranorex.</p>"
Visual Studio,Assess,tools,FALSE,"<p><strong><a href=""https://visualstudio.microsoft.com/"">Visual Studio</a></strong> is an integrated development environment (IDE) developed by Microsoft.</p><p>It has proper debugging functionalies for the languages we are using, like C# and Fortran. But it also lacks functionality that other IDEs do provide.</p>"
Juliahub Secure,Assess,tools,TRUE,"<p><strong><a href=""https://juliahub.com/"">Juliahub Secure</a></strong> is a platform for Julia packages. It is a secure and private registry for Julia packages that can be administered by Deltares. By the end of 2024, they will have vulnerability checks implemented for public packages.</p>"
Harbor,Assess,tools,TRUE,"<p><strong><a href=""https://goharbor.io/"">Harbor</a></strong> is an open-source cloud-native registry that stores, signs, and scans container images for vulnerabilities. It highly integrates with Kubernetes.</p>"
pip,Assess,tools,FALSE,"<p><strong><a href=""https://pip.pypa.io/en/stable/"">pip</a></strong> is the package installer for Python. You can use pip to install packages from the Python Package Index and other indexes.</p><p>Motivation: Deltares is using both Conda and Pip, depending on the types of packages. Pip cannot easily distribute binaries as Conda does. Pip is considered slow in dependency resolving. In a lot of project we now use Pixi, which uses uv under the hood to perform quick pip dependency solving.</p>"
Anaconda,Hold,tools,FALSE,"<p><strong><a href=""https://www.anaconda.com/"">Anaconda</a></strong> is a distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment.</p><p>Motivation: Deltares is using this tool for managing Python packages. The architecture guild has seen that tools like Pixi are worthy competitors.</p>"
SonarQube,Hold,tools,FALSE,"<p><strong><a href=""https://www.sonarqube.org/"">SonarQube</a></strong> is an open-source platform developed by SonarSource for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs, code smells, and security vulnerabilities.</p><p>Motivation: Deltares is using this tool for code quality checks. SonarQube supports plugins that SonarCloud doesn't have (e.g. for Fortran). We recommend to use SonarCloud as much as possible. And we are looking into competitors like Snyk.</p>"
SVN,Hold,tools,FALSE,"<p><strong><a href=""https://subversion.apache.org/"">SVN</a></strong> (Subversion) is a software versioning and revision control system distributed as open source under the Apache License.</p><p>Motivation: Deltares is still using SVN for version control, although we are trying to migrate everything as soon as possible to Github.</p>"
Latex,Hold,tools,FALSE,"<p><strong><a href=""https://www.latex-project.org/"">Latex</a></strong> is a high-quality typesetting system that includes features designed for the production of technical and scientific documentation.</p><p>Motivation: Deltares is using this tool for documentation. The architecture guild sees better alternatives in Quarto and Markdown.</p>"
IntelMKL,Hold,tools,FALSE,"<p><strong><a href=""https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl.html"">IntelMKL</a></strong> (Intel Math Kernel Library) is a library of highly optimized, extensively threaded math routines for science, engineering, and financial applications that require maximum performance.</p>"
IntelMPI,Hold,tools,FALSE,"<p><strong><a href=""https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/mpi-library.html"">IntelMPI</a></strong> (Intel Message Passing Interface) is a high-performance library for message passing that supports industry standards and provides highly optimized performance for a range of Intel architectures.</p>"
pre-commit hooks,Adopt,techniques,FALSE,"<p><strong><a href=""https://pre-commit.com/"">pre-commit hooks</a></strong> are a framework for managing and maintaining multi-language pre-commit hooks. The pre-commit hooks are run against the files that are staged in the git repository before the commit is made.</p>"
Auto-formatting,Adopt,techniques,FALSE,"<p><strong>Auto-formatting</strong> is the process of automatically formatting code to a specific style. This can be done using tools like Ruff for Python, and Clang-Tidy for C++.</p>"
UML,Adopt,techniques,FALSE,"<p><strong><a href=""https://www.uml.org/"">UML</a></strong> (Unified Modeling Language) is a standardized general-purpose modeling language in the field of software engineering. The standard is managed, and was created by the Object Management Group.</p>"
Domain Driven Design,Adopt,techniques,FALSE,"<p><strong><a href=""https://domainlanguage.com/ddd/"">Domain Driven Design</a></strong> (DDD) is an approach to software development that centers the development on programming a domain model that has a rich understanding of the processes and rules of a domain.</p>"
Test Driven Development,Adopt,techniques,FALSE,"<p><strong><a href=""https://en.wikipedia.org/wiki/Test-driven_development"">Test Driven Development</a></strong> (TDD) is a software development process that relies on the repetition of a very short development cycle: first the developer writes an (initially failing) automated test case that defines a desired improvement or new function, then produces the minimum amount of code to pass that test, and finally refactors the new code to acceptable standards.</p>"
Feature branches and Pull Request reviews,Adopt,techniques,FALSE,"<p><strong>Feature branches and Pull Request reviews</strong> are a way to manage changes in a codebase. Developers create a new branch for each feature or bug fix, and then create a Pull Request to merge the changes back into the main branch. The Pull Request is reviewed by other developers before the changes are merged.</p>"
Python type checking,Adopt,techniques,FALSE,"<p><strong>Python type checking</strong> is a way to add type hints to Python code to help catch errors early. Type hints are a way to specify the type of a variable, function, or class in Python. Type hints are not enforced by the Python interpreter, but can be checked using tools like mypy.</p>"
Containerized builds,Trial,techniques,TRUE,"<p><strong>Containerized builds</strong> are a way to run builds in a containerized environment. This can help to ensure that the build environment is consistent across different machines and can help to isolate the build process from the host system.</p>"
C4 model,Assess,techniques,FALSE,"<p><strong><a href=""https://c4model.com/"">C4 model</a></strong> is a way to create a set of software architecture diagrams that can be used to describe the software architecture of a software system.</p><p>Motivation: We need to learn more about the technique itself and see where it is applicable.</p>"
Feature toggles,Assess,techniques,TRUE,"<p><strong>Feature toggles</strong> are a way to turn features on and off in a live application without deploying new code. This can be useful for testing new features, rolling out features gradually, or turning off features that are causing problems.</p>"
Telemetry,Assess,techniques,TRUE,"<p><strong>Telemetry</strong> is the process of collecting and analyzing data about how a software application is used. This data can be used to improve the application, identify problems, and make data-driven decisions about future development.</p>"
GPU accelleration,Assess,techniques,TRUE,"<p><strong>GPU acceleration</strong> is the use of a graphics processing unit (GPU) to perform computations in addition to rendering images. GPUs are well-suited to parallel processing tasks and can be used to speed up certain types of computations.</p>"
Machine Learning Kernel Emulators,Assess,technique,TRUE,"<p><strong>Machine Learning Kernel Emulators</strong> are a way to approximate the output of a complex simulation model using a machine learning model. This can be useful for speeding up simulations, performing sensitivity analysis, and exploring the behavior of the model.</p>"
Secure coding,Assess,techniques,TRUE,"<p><strong><a href=""https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/stable-en/02-checklist/05-checklist"">Secure coding</a></strong> is the practice of writing code in a way that is resistant to attack and exploits. This can include practices like input validation, output encoding, and using secure libraries.</p>"
Avalonia UI,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://avaloniaui.net/"">Avalonia UI</a></strong> is a cross-platform XAML-based UI framework providing a flexible styling system and supporting a wide range of operating systems.</p><p>Motivation: Avalonia UI is a good alternative to Qt C++ for cross-platform user interfaces.</p>"
MAUI,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://dotnet.microsoft.com/en-us/apps/maui"">MAUI</a></strong> (Multi-platform App UI) is a cross-platform framework for building native mobile and desktop apps with .NET and C#.</p><p>Motivation: MAUI is a good alternative to Qt C++ for cross-platform user interfaces.</p>"
zarr,Trial,languages-and-frameworks,TRUE,"<p><strong><a href=""https://zarr.dev/"">zarr</a></strong> is a format for the storage of chunked, compressed, N-dimensional arrays. It is designed to be a flexible and efficient way to store large arrays of data.</p><p>Motivation: zarr is a good alternative to NetCDF for storing large arrays of data.</p>"
Apache Arrow,Trial,languages-and-frameworks,TRUE,"<p><strong><a href=""https://arrow.apache.org/"">Apache Arrow</a></strong> is a cross-language development platform for in-memory data. It specifies a standardized language-independent columnar memory format for flat and hierarchical data, organized for efficient analytic operations on modern hardware like CPUs and GPUs.</p><p>Motivation: Apache Arrow is a good alternative to NetCDF for storing large arrays of data.</p>"
