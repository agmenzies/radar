name,"ring","quadrant","isNew","description"
Typescript,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.typescriptlang.org/"">TypeScript</a></strong> is a superset of JavaScript that compiles to plain JavaScript. It is a statically typed language that is designed for the development of large applications and transcompiles to JavaScript. TypeScript is developed and maintained by Microsoft. It is a language for application-scale JavaScript development that supports classes, interfaces, and modules. It provides improved tooling and better structuring of large codebases. TypeScript is particularly well-suited to developing large applications and transcompiles to JavaScript. It may be used to develop JavaScript applications for both client-side and server-side execution.</p>"
C#,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://docs.microsoft.com/en-us/dotnet/csharp/"">C#</a></strong> is a general-purpose, multi-paradigm programming language developed by Microsoft. C# is widely used for building mobile applications, games, and enterprise software. It is a statically typed language that is designed for the Common Language Infrastructure (CLI). C# is a simple, modern, object-oriented, and type-safe programming language. It is a language that is suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.</p>"
NUnit,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://nunit.org/"">NUnit</a></strong> is a unit-testing framework for all .Net languages. Initially ported from JUnit, the current production release, version 3, has been completely rewritten with many new features and support for a wide range of .NET platforms. NUnit brings xUnit-style unit-testing to all .NET languages. Although we have been using NUnit for many years, it is still actively maintained and has a large community of users.</p>"
CMake,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://cmake.org/"">CMake</a></strong> is an open-source, cross-platform family of tools designed to build, test and package software. CMake is used to control the software compilation process using simple platform and compiler-independent configuration files, and generate native makefiles and workspaces that can be used in the compiler environment of your choice. CMake is quite sophisticated: it is possible to support complex environments requiring system configuration, pre-processor generation, code generation, and template instantiation.</p>"
NetCDF,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.unidata.ucar.edu/software/netcdf/"">NetCDF</a></strong> (Network Common Data Form) is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data. NetCDF is widely used in the Earth sciences and other fields. The project homepage is hosted by the Unidata program at the University Corporation for Atmospheric Research (UCAR).</p>"
NSubstitue,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://nsubstitute.github.io/"">NSubstitute</a></strong> is a friendly substitute for .NET mocking libraries. It has a simple, succinct syntax to help developers write clearer tests. NSubstitute is designed for Arrange-Act-Assert (AAA) testing and is tailored to C# 3.0 and later, Silverlight 5, Windows Store apps, and Windows Phone 8. NSubstitute is designed to be easy to use, strongly typed, and extensible.</p>"
Pydantic,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://pydantic-docs.helpmanual.io/"">Pydantic</a></strong> is a data validation and settings management library for Python. It uses Python type annotations to validate data and to define the shape of data. Pydantic enforces type hints at runtime, and provides user-friendly errors when data is invalid. Pydantic is particularly useful for data validation, settings management, and data parsing. It is designed to be simple to use and to provide helpful error messages.</p>"
Python,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.python.org/"">Python</a></strong> is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects. Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming. Python is often described as a ""batteries included"" language due to its comprehensive standard library.</p><p>Deltares uses this programming language because of easy cooperation between software developers and hydro engineers.</p>"
Vue 3,Adopt,languages-and-frameworks,FALSE,"<p><strong><a href=""https://v3.vuejs.org/"">Vue 3</a></strong> is a progressive JavaScript framework for building user interfaces. Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated single-page applications when used in combination with modern tooling and supporting libraries.</p>"
C++,Trial,language-and-frameworks,FALSE,"<p><strong><a href=""https://isocpp.org/"">C++</a></strong> is a general-purpose programming language created by Bjarne Stroustrup as an extension of the C programming language, or ""C with Classes"". The language has expanded significantly over time, and modern C++ has object-oriented, generic, and functional features in addition to facilities for low-level memory manipulation. It is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, Microsoft, Intel, and IBM.</p>"
SpecFlow,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://specflow.org/"">SpecFlow</a></strong> is a tool for creating executable specifications for .NET applications. It provides integration with Visual Studio, allowing developers and testers to define, manage, and automatically execute human-readable acceptance tests in .NET projects. SpecFlow uses the official Gherkin parser and supports the .NET framework, Xamarin, and .NET Core. It is a tool that can be used to define, manage, and automatically execute human-readable acceptance tests in .NET projects.</p>"
XArray,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""http://xarray.pydata.org/en/stable/"">XArray</a></strong> is an open-source project and Python package that aims to bring the labeled data power of pandas to the physical sciences by providing N-dimensional variants of the core pandas data structures. XArray is built on top of the Dask library and is particularly useful for working with multi-dimensional arrays. XArray is designed to be easy to use and to provide a powerful and flexible data model for working with multi-dimensional arrays.</p>"
Quarto,Trial,languages-and-frameworks,TRUE,"<p><strong><a href=""https://quarto.org/"">Quarto</a></strong> is a new tool for reproducible computational documents. It is designed to make it easy to create, manage, and publish reproducible computational documents using a combination of markdown, code, and output. Quarto is built on top of the R Markdown ecosystem and is designed to be easy to use and to provide a powerful and flexible data model for working with reproducible computational documents.</p>"
Vuetify,Trial,languages-and-frameworks,FALSE,"<p><strong><a href=""https://vuetifyjs.com/en/"">Vuetify</a></strong> is a Material Design component framework for Vue. It aims to provide clean, semantic, and reusable components that make building your application a breeze. Vuetify is designed to be easy to use and to provide a powerful and flexible data model for working with Material Design components in Vue applications.</p>"
Rust,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.rust-lang.org/"">Rust</a></strong> is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety. Rust is a multi-paradigm language that is designed for performance and safety. It is particularly well-suited to writing low-level code, such as operating systems, device drivers, and embedded systems. Rust is a language that is designed to be memory-safe and thread-safe, and to prevent null pointer dereferences, buffer overflows, and other common programming errors.</p><p>Deltares would like to try out projects with this language</p>"
BMI,Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://bmi.readthedocs.io/en/latest/"">BMI</a></strong> (Basic Model Interface) is a standardized interface for coupling models and software components. BMI is designed to be easy to use and to provide a flexible and extensible data model for working with coupled models and software components. BMI is particularly useful for working with models and software components that need to be coupled together in a flexible and extensible way.</p><p>Deltares is using this interface for integrated modelling. The architecture guild is wondering if there are alternatives.</p>"
Apache Airflow,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://airflow.apache.org/"">Apache Airflow</a></strong> is a platform to programmatically author, schedule, and monitor workflows. Use airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed. When workflows are defined as code, they become more maintainable, versionable, testable, and collaborative.</p>"
Dagster,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://dagster.io/"">Dagster</a></strong> is a data orchestrator for machine learning, analytics, and ETL. Dagster lets you define pipelines in terms of the data flow between reusable, logical components, then test locally and run anywhere. With a unified view of pipelines and the assets they produce, Dagster can schedule and orchestrate Pandas, Spark, SQL, or anything else that Python can invoke. Dagster is designed to be easy to use and to provide a powerful and flexible data model for working with data pipelines.</p>"
QGIS,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://qgis.org/"">QGIS</a></strong> is a free and open-source cross-platform desktop geographic information system (GIS) application that supports viewing, editing, and analysis of geospatial data. QGIS is designed to be easy to use and to provide a powerful and flexible data model for working with geospatial data. QGIS is particularly useful for working with geospatial data in a desktop environment.</p><p>The PMT Hydrology is writing user interface plugins for QGIS and is wondering if these kind of user interfaces is the way to go in the future.</p>"
Dask,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://dask.org/"">Dask</a></strong> is a flexible parallel computing library for analytic computing. Dask is designed to scale from single machines to clusters of machines. It is designed to be easy to use and to provide a powerful and flexible data model for working with parallel computing. Dask is particularly useful for working with large datasets that do not fit into memory.</p>"
Plotly Dash,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://plotly.com/dash/"">Plotly Dash</a></strong> is a Python framework for building analytical web applications. No JavaScript required. Built on top of Plotly.js, React, and Flask, Dash ties modern UI elements like dropdowns, sliders, and graphs directly to your analytical Python code. Dash apps are rendered in the web browser, so you can deploy your apps on servers or share them as standalone documents. With Dash, you can create interactive web-based visualizations and dashboards using only Python code.</p>"
Streamlit,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://streamlit.io/"">Streamlit</a></strong> is an open-source app framework for Machine Learning and Data Science teams. Streamlit is designed to be easy to use and to provide a powerful and flexible data model for working with data apps. Streamlit is particularly useful for working with data apps that need to be created quickly and easily.</p>"
Streamflow,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://streamflow.di.unito.it/"">Streamflow</a></strong> is a data orchestration platform that enables data engineers to build, test, and deploy data pipelines. Streamflow is designed to be easy to use and to provide a powerful and flexible data model for working with data pipelines. Streamflow is particularly useful for working with data pipelines that need to be created quickly.</p>"
Common Workflow Language,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.commonwl.org/"">Common Workflow Language</a></strong> (CWL) is a specification for describing analysis workflows and tools in a way that makes them portable and scalable across a variety of software and hardware environments, from workstations to cluster, cloud, and high-performance computing (HPC) environments. CWL is designed to be easy to use and to provide a powerful and flexible data model for working with analysis workflows and tools. CWL is particularly useful for working with analysis workflows and tools that need to be portable and scalable across a variety of software and hardware environments.</p>"
Java,Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://www.java.com/"">Java</a></strong> is a general-purpose programming language that is class-based, object-oriented, and designed to have as few implementation dependencies as possible. Java is a language that is designed to be simple, object-oriented, and familiar. It is a language that is suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.</p><p>The architecture guild is contemplating on the future of Java and if new projects should be started in Java.</p>"
Snakemake,Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://snakemake.readthedocs.io/en/stable/"">Snakemake</a></strong> is a workflow management system that aims to reduce the complexity of creating workflows by providing a fast and comfortable execution environment, together with a clean and modern specification language in Python style. Snakemake workflows are essentially Python scripts extended by declarative code to define rules. Rules describe how to create output files from input files. Snakemake is designed to be easy to use and to provide a powerful and flexible data model for working with workflows. Snakemake is particularly useful for working with workflows that need to be created quickly and easily.</p>"
Fortran,Assess,languages-and-frameworks,FALSE,"<p><strong><a href=""https://fortran-lang.org/"">Fortran</a></strong> is a general-purpose, compiled imperative programming language that is especially suited to numeric computation and scientific computing. Fortran is a language that is designed to be simple, efficient, and easy to use. It is a language that is suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.</p><p>The architecture board is doubting on the future of Fortran and it is likely that we will not start any new projects in Fortran.</p>"
Julia,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://julialang.org/"">Julia</a></strong> is a high-level, high-performance, dynamic programming language. While it is a general-purpose language and can be used to write any application, many of its features are well-suited for high-performance numerical analysis and computational science. Julia is a language that is designed to be fast, easy to use, and easy to learn. It is a language that is suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.</p>"
Meson,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://mesonbuild.com/"">Meson</a></strong> is an open-source build system meant to be both extremely fast and, even more importantly, as user-friendly as possible. The main design point of Meson is that every moment a developer spends writing or debugging build definitions is a second wasted. So is every second spent waiting for the build system to actually start compiling code. All these moments are non-productive, so the developer is encouraged to spend as little time as possible writing and maintaining build definitions. Meson is designed to be easy to use and to provide a powerful and flexible data model for working with build systems. Meson is particularly useful for working with build systems that need to be fast and user-friendly. This tool could be an alternative to CMake.</p>"
Flutter,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://flutter.dev/"">Flutter</a></strong> is Google's UI toolkit for building natively compiled applications for mobile, web, and desktop from a single codebase. Flutter is designed to be easy to use and to provide a powerful and flexible data model for working with user interfaces. Flutter is particularly useful for working with user interfaces that need to be created quickly and easily.</p><p>Deltares doesn't use this framework yet, but it would be an interesting alternative to Vuetify and PyQt.</p>"
RestructuredText,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://docutils.sourceforge.io/rst.html"">RestructuredText</a></strong> is an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser system. It is useful for in-line program documentation (such as Python docstrings), for quickly creating simple web pages, and for standalone documents. It is designed to be easy to use and to provide a powerful and flexible data model for working with plaintext markup. RestructuredText is particularly useful for working with plaintext markup that needs to be easy to read and write.</p><p>Deltares is using this language for documentation. The architecture guild is wondering if there are better alternatives like Quarto and Markdown.</p>"
Sphinx,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.sphinx-doc.org/en/master/"">Sphinx</a></strong> is a tool that makes it easy to create intelligent and beautiful documentation for Python projects (or other documents consisting of multiple reStructuredText sources). It was originally created for the Python documentation, and it has excellent facilities for the documentation of Python projects, but C/C++ is supported as well. Sphinx uses reStructuredText as its markup language, and many of its strengths come from the power and straightforwardness of reStructuredText and its ability to be translated and to produce output in multiple formats.</p><p>Deltares is using this tool for documentation. The architecture guild is wondering if there are better alternatives like Quarto.</p>"
PyQt,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://www.riverbankcomputing.com/software/pyqt/intro"">PyQt</a></strong> is a set of Python v2 and v3 bindings for The Qt Company's Qt application framework and runs on all platforms supported by Qt, including Windows, OS X, Linux, iOS, and Android. PyQt5 supports Qt v5. PyQt4 supports Qt v4 and will build against Qt v5. The bindings are implemented as a set of Python modules and contain over 1,000 classes. PyQt brings together the Qt C++ cross-platform application framework and the cross-platform interpreted language Python. PyQt is particularly useful for working with the Qt application framework in Python applications.</p><p>Deltares is using this tool for creating user interfaces. The architecture guild is wondering if there are better alternatives like Vuetify and Flutter.</p>"
Guitares,Hold,languages-and-frameworks,TRUE,"<p><strong><a href=""https://github.com/Deltares-research/Guitares"">Guitares</a></strong> is a Python library for creating user interfaces with the Qt application framework. Guitares is designed to be easy to use and to provide a powerful and flexible data model for working with user interfaces. Guitares is particularly useful for working with the Qt application framework in Python applications.</p><p>Deltares is using this tool for creating user interfaces. The architecture guild is wondering if there are better alternatives like Vuetify and Flutter.</p>"
